/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import dao.NhanVienDAO;
import entities.NhanVien;

import java.util.ArrayList;

import utils.DialogHelper;

/**
 * @author NGUYEN THI NGUYET VY
 */
public class DoiMKForm extends javax.swing.JPanel {
    /**
     * Creates new form FormTemplate
     */
    public DoiMKForm() {
        initComponents();
        txtUser.setText(utils.Auth.user.getMaNhanVien());
    }

    private boolean checkForm() {
        String mk = utils.Auth.user.getMatKhau();
        if (String.valueOf(txtConfirmPass.getPassword()).trim().isEmpty()
                || String.valueOf(txtNewPass.getPassword()).trim().isEmpty() || String.valueOf(txtOld.getPassword()).trim().isEmpty()) {
            DialogHelper.alert(this, "Vui lòng nhập đầy đủ thông tin!");
            return false;
        }
        
        if(!String.valueOf(txtOld.getPassword()).trim().equalsIgnoreCase(mk)){
            DialogHelper.alert(this, "Mật khẩu cũ không trùng khớp");
            return false;
        }
        
        if(String.valueOf(txtNewPass.getPassword()).trim().equalsIgnoreCase(mk)){
            DialogHelper.alert(this, "Mật khẩu mới không nên trùng với mật khẩu cũ!");
            return false;
        }
        
        if (!String.valueOf(txtConfirmPass.getPassword()).equals(String.valueOf(txtNewPass.getPassword()))) {
            DialogHelper.alert(this, "Mật khẩu mới không trùng khớp!");
            return false;
        }

        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new swing.PanelBorder();
        txtUser = new swing.TextFieldSuggestion();
        txtNewPass = new swing.PasswordField();
        txtConfirmPass = new swing.PasswordField();
        txtOld = new swing.PasswordField();
        btnDoiMK = new swing.ButtonSuggestion();

        setOpaque(false);

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        txtUser.setText("Mã Nhân Viên");
        txtUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtNewPass.setBackground(new java.awt.Color(255, 255, 255));
        txtNewPass.setLabelText("Mật khẩu mới");

        txtConfirmPass.setBackground(new java.awt.Color(255, 255, 255));
        txtConfirmPass.setLabelText("Xác nhận mật khẩu");

        txtOld.setBackground(new java.awt.Color(255, 255, 255));
        txtOld.setLabelText("Mật khẩu cũ");

        btnDoiMK.setForeground(new java.awt.Color(0, 0, 0));
        btnDoiMK.setText("XÁC NHẬN");
        btnDoiMK.setBorderColor(new java.awt.Color(255, 255, 255));
        btnDoiMK.setColor(new java.awt.Color(153, 153, 255));
        btnDoiMK.setColorClick(new java.awt.Color(102, 102, 255));
        btnDoiMK.setColorOver(new java.awt.Color(102, 102, 255));
        btnDoiMK.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDoiMK.setRadius(55);
        btnDoiMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNewPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtConfirmPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtOld, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnDoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(txtNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtConfirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnDoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMKActionPerformed
        // TODO add your handling code here:
        if (checkForm()) {
            NhanVien nv = utils.Auth.user;
            nv.setMatKhau(String.valueOf(txtNewPass.getPassword()));
            new NhanVienDAO().update(nv);
            utils.DialogHelper.alert(this, "Cập nhật mật khẩu mới thành công!");
        }
    }//GEN-LAST:event_btnDoiMKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.ButtonSuggestion btnDoiMK;
    private swing.PanelBorder panelBorder1;
    private swing.PasswordField txtConfirmPass;
    private swing.PasswordField txtNewPass;
    private swing.PasswordField txtOld;
    private swing.TextFieldSuggestion txtUser;
    // End of variables declaration//GEN-END:variables
}
